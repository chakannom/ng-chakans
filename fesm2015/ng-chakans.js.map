{"version":3,"file":"ng-chakans.js","sources":["ng://ng-chakans/service/navbar.service.ts","ng://ng-chakans/service/route.service.ts","ng://ng-chakans/component/navbar/navbar.component.ts","ng://ng-chakans/model/profile-info.model.ts","ng://ng-chakans/config.ts","ng://ng-chakans/config.service.ts","ng://ng-chakans/service/profile.service.ts","ng://ng-chakans/component/profiles/page-ribbon.component.ts","ng://ng-chakans/service/sidebar.service.ts","ng://ng-chakans/component/sidebar/sidebar.component.ts","ng://ng-chakans/directive/active-language.directive.ts","ng://ng-chakans/cks-components.ts","ng://ng-chakans/ng-chakans.module.ts","ng://ng-chakans/service/subscription-manager.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class CksNavbarService {\n  navbarViewed: BehaviorSubject<boolean>;\n\n  constructor() {\n    this.navbarViewed = new BehaviorSubject<boolean>(true);\n  }\n\n  get isNavbarViewed() {\n    return this.navbarViewed.asObservable();\n  }\n\n  setNavbarViewed(navbarViewed: boolean) {\n    this.navbarViewed.next(navbarViewed);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class CksRouteService {\n  constructor(private router: Router) {}\n\n  navigate(navigation: any) {\n    if (typeof navigation === 'string') {\n      window.location.href = navigation;\n    } else {\n      const navigationExtras: NavigationExtras = {};\n      if (navigation.queryParams) {\n        navigationExtras.queryParams = navigation.queryParams;\n      }\n      if (navigation.fragment) {\n        navigationExtras.fragment = navigation.fragment;\n      }\n      if (navigation.routerLink && navigation.routerLink.length > 0) {\n        this.router.navigate(navigation.routerLink, navigationExtras);\n      }\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CksNavbarService } from '../../service/navbar.service';\nimport { CksRouteService } from '../../service/route.service';\n\n@Component({\n  selector: 'cks-navbar',\n  templateUrl: './navbar.component.html'\n})\nexport class CksNavbarComponent {\n  @Input() brand: any;\n  @Input() menuItems: any[];\n  isNavbarViewed: Observable<boolean>;\n  isNavbarCollapsed: boolean;\n\n  constructor(private navbarService: CksNavbarService, private routeService: CksRouteService) {\n    this.isNavbarCollapsed = true;\n    this.isNavbarViewed = this.navbarService.isNavbarViewed;\n  }\n\n  doAction(navigation: any) {\n    this.collapseNavbar();\n    if (navigation) {\n      if (typeof navigation === 'function') {\n        navigation();\n      } else {\n        this.routeService.navigate(navigation);\n      }\n    }\n  }\n\n  collapseNavbar() {\n    this.isNavbarCollapsed = true;\n  }\n\n  toggleNavbar() {\n    this.isNavbarCollapsed = !this.isNavbarCollapsed;\n  }\n\n  isUsedRouterLink(navigation: any) {\n    if (!navigation || typeof navigation === 'function' || typeof navigation === 'string') {\n      return false;\n    }\n    return true;\n  }\n}\n","export class CksProfileInfo {\n  activeProfiles: string[];\n  ribbonEnv: string;\n  inProduction: boolean;\n  swaggerEnabled: boolean;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CksModuleConfig {\n  serverApiUrl?: any = '/';\n}\n","import { Injectable } from '@angular/core';\nimport { CksModuleConfig } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CksConfigService {\n  CONFIG_OPTIONS: CksModuleConfig;\n\n  constructor(moduleConfig?: CksModuleConfig) {\n    this.CONFIG_OPTIONS = {\n      ...new CksModuleConfig(),\n      ...moduleConfig\n    };\n  }\n\n  getConfig(): CksModuleConfig {\n    return this.CONFIG_OPTIONS;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { CksProfileInfo } from '../model/profile-info.model';\nimport { CksConfigService } from '../config.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CksProfileService {\n  private infoUrl = '{SERVER_API_URL}' + 'management/info';\n  private profileInfo: Promise<CksProfileInfo>;\n\n  constructor(private configService: CksConfigService, private http: HttpClient) {\n    const config = this.configService.getConfig();\n    this.infoUrl = this.infoUrl.replace('{SERVER_API_URL}', config.serverApiUrl);\n  }\n\n  getProfileInfo(): Promise<CksProfileInfo> {\n    if (!this.profileInfo) {\n      this.profileInfo = this.http\n        .get<CksProfileInfo>(this.infoUrl, { observe: 'response' })\n        .pipe(\n          map((res: HttpResponse<CksProfileInfo>) => {\n            const data = res.body;\n            const pi = new CksProfileInfo();\n            pi.activeProfiles = data['activeProfiles'];\n            const displayRibbonOnProfiles = data['display-ribbon-on-profiles'].split(',');\n            if (pi.activeProfiles) {\n              const ribbonProfiles = displayRibbonOnProfiles.filter(profile => pi.activeProfiles.includes(profile));\n              if (ribbonProfiles.length !== 0) {\n                pi.ribbonEnv = ribbonProfiles[0];\n              }\n              pi.inProduction = pi.activeProfiles.includes('prod');\n              pi.swaggerEnabled = pi.activeProfiles.includes('swagger');\n            }\n            return pi;\n          })\n        )\n        .toPromise();\n    }\n    return this.profileInfo;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CksProfileService } from '../../service/profile.service';\nimport { CksProfileInfo } from '../../model/profile-info.model';\n\n@Component({\n  selector: 'cks-page-ribbon',\n  template: `\n    <div class=\"ribbon\" *ngIf=\"ribbonEnv\">\n      <a href=\"\">{{ 'global.ribbon.' + ribbonEnv | translate }}</a>\n    </div>\n  `\n})\nexport class CksPageRibbonComponent implements OnInit {\n  profileInfo: CksProfileInfo;\n  ribbonEnv: string;\n\n  constructor(private profileService: CksProfileService) {}\n\n  ngOnInit() {\n    this.profileService.getProfileInfo().then(profileInfo => {\n      this.profileInfo = profileInfo;\n      this.ribbonEnv = profileInfo.ribbonEnv;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class CksSidebarService {\n  sidebarViewed: BehaviorSubject<boolean>;\n\n  constructor() {\n    this.sidebarViewed = new BehaviorSubject<boolean>(true);\n  }\n\n  get isSidebarViewed() {\n    return this.sidebarViewed.asObservable();\n  }\n\n  setSidebarViewed(sidebarViewed: boolean) {\n    this.sidebarViewed.next(sidebarViewed);\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CksSidebarService } from '../../service/sidebar.service';\nimport { CksRouteService } from '../../service/route.service';\n\n@Component({\n  selector: 'cks-sidebar',\n  templateUrl: './sidebar.component.html'\n})\nexport class CksSidebarComponent {\n  @Input() headerTemplate: TemplateRef<any>;\n  @Input() contentTemplate: TemplateRef<any>;\n  @Input() footerTemplate: TemplateRef<any>;\n  @Input() menuItems: any[];\n  isSidebarViewed: Observable<boolean>;\n  isSidebarCollapsed: boolean;\n\n  constructor(private sidebarService: CksSidebarService, private routeService: CksRouteService) {\n    this.isSidebarCollapsed = true;\n    this.isSidebarViewed = this.sidebarService.isSidebarViewed;\n  }\n\n  doAction(navigation: any) {\n    this.collapseSidebar();\n    if (navigation) {\n      if (typeof navigation === 'function') {\n        navigation();\n      } else {\n        this.routeService.navigate(navigation);\n      }\n    }\n  }\n\n  collapseSidebar() {\n    this.isSidebarCollapsed = true;\n  }\n\n  toggleSidebar() {\n    this.isSidebarCollapsed = !this.isSidebarCollapsed;\n  }\n\n  isUsedRouterLink(navigation: any) {\n    if (!navigation || typeof navigation === 'function' || typeof navigation === 'string') {\n      return false;\n    }\n    return true;\n  }\n}\n","import { Directive, OnInit, ElementRef, Renderer2, Input } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\n@Directive({\n  selector: '[cksActiveLanguage]'\n})\nexport class CksActiveLanguageDirective implements OnInit {\n  @Input() cksActiveLanguage: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2, private translateService: TranslateService) {}\n\n  ngOnInit() {\n    this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.updateActiveFlag(event.lang);\n    });\n    this.updateActiveFlag(this.translateService.currentLang);\n  }\n\n  updateActiveFlag(selectedLanguage) {\n    if (this.cksActiveLanguage === selectedLanguage) {\n      this.renderer.addClass(this.el.nativeElement, 'active');\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, 'active');\n    }\n  }\n}\n","import { CksNavbarComponent } from './component/navbar/navbar.component';\nimport { CksPageRibbonComponent } from './component/profiles/page-ribbon.component';\nimport { CksSidebarComponent } from './component/sidebar/sidebar.component';\nimport { CksActiveLanguageDirective } from './directive/active-language.directive';\n\nexport const CKS_COMPONENTS = [CksNavbarComponent, CksPageRibbonComponent, CksSidebarComponent];\n\nexport const CKS_DIRECTIVES = [CksActiveLanguageDirective];\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CksModuleConfig } from './config';\nimport { CksConfigService } from './config.service';\nimport { CKS_COMPONENTS, CKS_DIRECTIVES } from './cks-components';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, FontAwesomeModule, NgbModule, RouterModule, TranslateModule],\n  declarations: [...CKS_DIRECTIVES, ...CKS_COMPONENTS],\n  entryComponents: [],\n  exports: [...CKS_DIRECTIVES, ...CKS_COMPONENTS, TranslateModule]\n})\nexport class NgChakansModule {\n  static forRoot(moduleConfig: CksModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgChakansModule,\n      providers: [\n        { provide: CksModuleConfig, useValue: moduleConfig },\n        {\n          provide: CksConfigService,\n          useClass: CksConfigService,\n          deps: [CksModuleConfig]\n        }\n      ]\n    };\n  }\n  static forChild(moduleConfig: CksModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgChakansModule,\n      providers: [{ provide: CksModuleConfig, useValue: moduleConfig }]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/**\n * An utility class to manage RX subscriptions\n */\n@Injectable({ providedIn: 'root' })\nexport class CksSubscriptionManager {\n  private subscribersMap: Map<string, Subscription[]> = new Map<string, Subscription[]>();\n\n  /**\n   * Method to create {name}'s subscribers\n   */\n  create(name: string) {\n    this.subscribersMap.set(name, []);\n  }\n\n  /**\n   * Method to push subscriber in {name}'s subscribers\n   */\n  push(name: string, subscriber: Subscription) {\n    if (this.subscribersMap.get(name) === undefined) {\n      this.create(name);\n    }\n    this.subscribersMap.get(name).push(subscriber);\n  }\n\n  /**\n   * Method to destroy {name}'s subscribers\n   */\n  destroy(name: string) {\n    const subscribers = this.subscribersMap.get(name);\n    subscribers.filter(subscriber => subscriber !== undefined && !subscriber.closed).forEach(subscriber => subscriber.unsubscribe());\n    subscribers.splice(0, subscribers.length);\n    this.subscribersMap.delete(name);\n  }\n\n  /**\n   * Method to count {name}'s subscribers\n   */\n  getCount(name: string) {\n    return this.subscribersMap.get(name).length;\n  }\n\n  /**\n   * Method to destroy all subscribers\n   */\n  destroyAll() {\n    this.subscribersMap.forEach((subscribers, key) => {\n      subscribers.filter(subscriber => subscriber !== undefined && !subscriber.closed).forEach(subscriber => subscriber.unsubscribe());\n      subscribers.splice(0, subscribers.length);\n    });\n    this.subscribersMap.clear();\n  }\n}\n"],"names":["tslib_1.__decorate"],"mappings":";;;;;;;;;;;IAIa,gBAAgB,GAA7B,MAAa,gBAAgB;IAG3B;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,eAAe,CAAU,IAAI,CAAC,CAAC;KACxD;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;IAED,eAAe,CAAC,YAAqB;QACnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACtC;CACF,CAAA;;AAdY,gBAAgB;IAD5B,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;;GACtB,gBAAgB,CAc5B;;ICdY,eAAe,GAA5B,MAAa,eAAe;IAC1B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;KAAI;IAEtC,QAAQ,CAAC,UAAe;QACtB,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC;SACnC;aAAM;YACL,MAAM,gBAAgB,GAAqB,EAAE,CAAC;YAC9C,IAAI,UAAU,CAAC,WAAW,EAAE;gBAC1B,gBAAgB,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;aACvD;YACD,IAAI,UAAU,CAAC,QAAQ,EAAE;gBACvB,gBAAgB,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;aACjD;YACD,IAAI,UAAU,CAAC,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;aAC/D;SACF;KACF;CACF,CAAA;;AAnBY,eAAe;IAD3B,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qCAEL,MAAM;GADvB,eAAe,CAmB3B;;ICdY,kBAAkB,GAA/B,MAAa,kBAAkB;IAM7B,YAAoB,aAA+B,EAAU,YAA6B;QAAtE,kBAAa,GAAb,aAAa,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAiB;QACxF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;KACzD;IAED,QAAQ,CAAC,UAAe;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,UAAU,EAAE;YACd,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;gBACpC,UAAU,EAAE,CAAC;aACd;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;aACxC;SACF;KACF;IAED,cAAc;QACZ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KAC/B;IAED,YAAY;QACV,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;KAClD;IAED,gBAAgB,CAAC,UAAe;QAC9B,IAAI,CAAC,UAAU,IAAI,OAAO,UAAU,KAAK,UAAU,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YACrF,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACb;CACF,CAAA;AAnCUA;IAAR,KAAK,EAAE;;iDAAY;AACXA;IAAR,KAAK,EAAE;;qDAAkB;AAFf,kBAAkB;IAJ9B,SAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,muHAAsC;KACvC,CAAC;qCAOmC,gBAAgB,EAAwB,eAAe;GAN/E,kBAAkB,CAoC9B;;MC7CY,cAAc;CAK1B;;ICAY,eAAe,GAA5B,MAAa,eAAe;IAH5B;QAIE,iBAAY,GAAS,GAAG,CAAC;KAC1B;CAAA,CAAA;;AAFY,eAAe;IAH3B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAE3B;;ICDY,gBAAgB,GAA7B,MAAa,gBAAgB;IAG3B,YAAY,YAA8B;QACxC,IAAI,CAAC,cAAc,qBACd,IAAI,eAAe,EAAE,EACrB,YAAY,CAChB,CAAC;KACH;IAED,SAAS;QACP,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;CACF,CAAA;;AAbY,gBAAgB;IAH5B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;qCAI2B,eAAe;GAH/B,gBAAgB,CAa5B;;ICZY,iBAAiB,GAA9B,MAAa,iBAAiB;IAI5B,YAAoB,aAA+B,EAAU,IAAgB;QAAzD,kBAAa,GAAb,aAAa,CAAkB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAHrE,YAAO,GAAG,kBAAkB,GAAG,iBAAiB,CAAC;QAIvD,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;KAC9E;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI;iBACzB,GAAG,CAAiB,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;iBAC1D,IAAI,CACH,GAAG,CAAC,CAAC,GAAiC;gBACpC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACtB,MAAM,EAAE,GAAG,IAAI,cAAc,EAAE,CAAC;gBAChC,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC3C,MAAM,uBAAuB,GAAG,IAAI,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9E,IAAI,EAAE,CAAC,cAAc,EAAE;oBACrB,MAAM,cAAc,GAAG,uBAAuB,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;oBACtG,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC/B,EAAE,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;qBAClC;oBACD,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACrD,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;iBAC3D;gBACD,OAAO,EAAE,CAAC;aACX,CAAC,CACH;iBACA,SAAS,EAAE,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;CACF,CAAA;;AAlCY,iBAAiB;IAD7B,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qCAKE,gBAAgB,EAAgB,UAAU;GAJlE,iBAAiB,CAkC7B;;IC7BY,sBAAsB,GAAnC,MAAa,sBAAsB;IAIjC,YAAoB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;KAAI;IAEzD,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,WAAW;YACnD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;SACxC,CAAC,CAAC;KACJ;CACF,CAAA;AAZY,sBAAsB;IARlC,SAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,QAAQ,EAAE;;;;GAIT;KACF,CAAC;qCAKoC,iBAAiB;GAJ1C,sBAAsB,CAYlC;;ICpBY,iBAAiB,GAA9B,MAAa,iBAAiB;IAG5B;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,eAAe,CAAU,IAAI,CAAC,CAAC;KACzD;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC1C;IAED,gBAAgB,CAAC,aAAsB;QACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACxC;CACF,CAAA;;AAdY,iBAAiB;IAD7B,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;;GACtB,iBAAiB,CAc7B;;ICTY,mBAAmB,GAAhC,MAAa,mBAAmB;IAQ9B,YAAoB,cAAiC,EAAU,YAA6B;QAAxE,mBAAc,GAAd,cAAc,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAiB;QAC1F,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC;KAC5D;IAED,QAAQ,CAAC,UAAe;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,UAAU,EAAE;YACd,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;gBACpC,UAAU,EAAE,CAAC;aACd;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;aACxC;SACF;KACF;IAED,eAAe;QACb,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;KAChC;IAED,aAAa;QACX,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;KACpD;IAED,gBAAgB,CAAC,UAAe;QAC9B,IAAI,CAAC,UAAU,IAAI,OAAO,UAAU,KAAK,UAAU,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YACrF,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACb;CACF,CAAA;AArCUA;IAAR,KAAK,EAAE;8BAAiB,WAAW;2DAAM;AACjCA;IAAR,KAAK,EAAE;8BAAkB,WAAW;4DAAM;AAClCA;IAAR,KAAK,EAAE;8BAAiB,WAAW;2DAAM;AACjCA;IAAR,KAAK,EAAE;;sDAAkB;AAJf,mBAAmB;IAJ/B,SAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,wiFAAuC;KACxC,CAAC;qCASoC,iBAAiB,EAAwB,eAAe;GARjF,mBAAmB,CAsC/B;;ICzCY,0BAA0B,GAAvC,MAAa,0BAA0B;IAGrC,YAAoB,EAAc,EAAU,QAAmB,EAAU,gBAAkC;QAAvF,OAAE,GAAF,EAAE,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;KAAI;IAE/G,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAsB;YAClE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;KAC1D;IAED,gBAAgB,CAAC,gBAAgB;QAC/B,IAAI,IAAI,CAAC,iBAAiB,KAAK,gBAAgB,EAAE;YAC/C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;SACzD;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;SAC5D;KACF;CACF,CAAA;AAlBUA;IAAR,KAAK,EAAE;;qEAA2B;AADxB,0BAA0B;IAHtC,SAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;KAChC,CAAC;qCAIwB,UAAU,EAAoB,SAAS,EAA4B,gBAAgB;GAHhG,0BAA0B,CAmBtC;;MCpBY,cAAc,GAAG,CAAC,kBAAkB,EAAE,sBAAsB,EAAE,mBAAmB,CAAC,CAAC;AAEhG,MAAa,cAAc,GAAG,CAAC,0BAA0B,CAAC;;;ACP1D,IAgBa,eAAe,uBAA5B,MAAa,eAAe;IAC1B,OAAO,OAAO,CAAC,YAA6B;QAC1C,OAAO;YACL,QAAQ,EAAE,iBAAe;YACzB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,YAAY,EAAE;gBACpD;oBACE,OAAO,EAAE,gBAAgB;oBACzB,QAAQ,EAAE,gBAAgB;oBAC1B,IAAI,EAAE,CAAC,eAAe,CAAC;iBACxB;aACF;SACF,CAAC;KACH;IACD,OAAO,QAAQ,CAAC,YAA6B;QAC3C,OAAO;YACL,QAAQ,EAAE,iBAAe;YACzB,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;SAClE,CAAC;KACH;CACF,CAAA;AApBY,eAAe;IAN3B,QAAQ,CAAC;QACR,OAAO,EAAE,CAAC,YAAY,EAAE,iBAAiB,EAAE,SAAS,EAAE,YAAY,EAAE,eAAe,CAAC;QACpF,YAAY,EAAE,CAAC,GAAG,cAAc,EAAE,GAAG,cAAc,CAAC;QACpD,eAAe,EAAE,EAAE;QACnB,OAAO,EAAE,CAAC,GAAG,cAAc,EAAE,GAAG,cAAc,EAAE,eAAe,CAAC;KACjE,CAAC;GACW,eAAe,CAoB3B;;ACjCD;;;AAIA,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;;;;IADnC;QAEU,mBAAc,GAAgC,IAAI,GAAG,EAA0B,CAAC;KA8CzF;;;;IAzCC,MAAM,CAAC,IAAY;QACjB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KACnC;;;;IAKD,IAAI,CAAC,IAAY,EAAE,UAAwB;QACzC,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACnB;QACD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAChD;;;;IAKD,OAAO,CAAC,IAAY;QAClB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,WAAW,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,KAAK,SAAS,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;QACjI,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAClC;;;;IAKD,QAAQ,CAAC,IAAY;QACnB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;KAC7C;;;;IAKD,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,GAAG;YAC3C,WAAW,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,KAAK,SAAS,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;YACjI,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;KAC7B;CACF,CAAA;;AA/CY,sBAAsB;IADlC,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACtB,sBAAsB,CA+ClC;;;;"}