{"version":3,"file":"ng-chakans.js","sources":["ng://ng-chakans/service/navbar.service.ts","ng://ng-chakans/service/route.service.ts","ng://ng-chakans/component/navbar/navbar.component.ts","ng://ng-chakans/model/profile-info.model.ts","ng://ng-chakans/config.ts","ng://ng-chakans/config.service.ts","ng://ng-chakans/service/profile.service.ts","ng://ng-chakans/component/profiles/page-ribbon.component.ts","ng://ng-chakans/service/sidebar.service.ts","ng://ng-chakans/component/sidebar/sidebar.component.ts","ng://ng-chakans/directive/active-language.directive.ts","ng://ng-chakans/cks-components.ts","ng://ng-chakans/ng-chakans.module.ts","ng://ng-chakans/service/subscription-manager.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class CksNavbarService {\n  navbarViewed: BehaviorSubject<boolean>;\n\n  constructor() {\n    this.navbarViewed = new BehaviorSubject<boolean>(true);\n  }\n\n  get isNavbarViewed() {\n    return this.navbarViewed.asObservable();\n  }\n\n  setNavbarViewed(navbarViewed: boolean) {\n    this.navbarViewed.next(navbarViewed);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class CksRouteService {\n  constructor(private router: Router) {}\n\n  navigate(href: any) {\n    if (typeof href === 'string') {\n      window.location.href = href;\n    } else {\n      const navigationExtras: NavigationExtras = {};\n      if (href.queryParams) {\n        navigationExtras.queryParams = href.queryParams;\n      }\n      if (href.fragment) {\n        navigationExtras.fragment = href.fragment;\n      }\n      if (href.routerLink && href.routerLink.length > 0) {\n        this.router.navigate(href.routerLink, navigationExtras);\n      }\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CksNavbarService } from '../../service/navbar.service';\nimport { CksRouteService } from '../../service/route.service';\n\n@Component({\n  selector: 'cks-navbar',\n  templateUrl: './navbar.component.html'\n})\nexport class CksNavbarComponent {\n  @Input() brand: any;\n  @Input() menuItems: any[];\n  isNavbarViewed: Observable<boolean>;\n  isNavbarCollapsed: boolean;\n\n  constructor(private navbarService: CksNavbarService, private routeService: CksRouteService) {\n    this.isNavbarCollapsed = true;\n    this.isNavbarViewed = this.navbarService.isNavbarViewed;\n  }\n\n  doAction(navigation: any) {\n    this.collapseNavbar();\n    if (navigation) {\n      if (typeof navigation === 'function') {\n        navigation();\n      } else {\n        this.routeService.navigate(navigation);\n      }\n    }\n  }\n\n  collapseNavbar() {\n    this.isNavbarCollapsed = true;\n  }\n\n  toggleNavbar() {\n    this.isNavbarCollapsed = !this.isNavbarCollapsed;\n  }\n\n  isUsedRouterLink(navigation: any) {\n    if (!navigation || typeof navigation === 'function' || typeof navigation === 'string') {\n      return false;\n    }\n    return true;\n  }\n}\n","export class CksProfileInfo {\n  activeProfiles: string[];\n  ribbonEnv: string;\n  inProduction: boolean;\n  swaggerEnabled: boolean;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CksModuleConfig {\n  serverApiUrl?: any = '/';\n}\n","import { Injectable } from '@angular/core';\nimport { CksModuleConfig } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CksConfigService {\n  CONFIG_OPTIONS: CksModuleConfig;\n\n  constructor(moduleConfig?: CksModuleConfig) {\n    this.CONFIG_OPTIONS = {\n      ...new CksModuleConfig(),\n      ...moduleConfig\n    };\n  }\n\n  getConfig(): CksModuleConfig {\n    return this.CONFIG_OPTIONS;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { CksProfileInfo } from '../model/profile-info.model';\nimport { CksConfigService } from '../config.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CksProfileService {\n  private infoUrl = '{SERVER_API_URL}' + 'management/info';\n  private profileInfo: Promise<CksProfileInfo>;\n\n  constructor(private configService: CksConfigService, private http: HttpClient) {\n    const config = this.configService.getConfig();\n    this.infoUrl = this.infoUrl.replace('{SERVER_API_URL}', config.serverApiUrl);\n  }\n\n  getProfileInfo(): Promise<CksProfileInfo> {\n    if (!this.profileInfo) {\n      this.profileInfo = this.http\n        .get<CksProfileInfo>(this.infoUrl, { observe: 'response' })\n        .pipe(\n          map((res: HttpResponse<CksProfileInfo>) => {\n            const data = res.body;\n            const pi = new CksProfileInfo();\n            pi.activeProfiles = data['activeProfiles'];\n            const displayRibbonOnProfiles = data['display-ribbon-on-profiles'].split(',');\n            if (pi.activeProfiles) {\n              const ribbonProfiles = displayRibbonOnProfiles.filter(profile => pi.activeProfiles.includes(profile));\n              if (ribbonProfiles.length !== 0) {\n                pi.ribbonEnv = ribbonProfiles[0];\n              }\n              pi.inProduction = pi.activeProfiles.includes('prod');\n              pi.swaggerEnabled = pi.activeProfiles.includes('swagger');\n            }\n            return pi;\n          })\n        )\n        .toPromise();\n    }\n    return this.profileInfo;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CksProfileService } from '../../service/profile.service';\nimport { CksProfileInfo } from '../../model/profile-info.model';\n\n@Component({\n  selector: 'cks-page-ribbon',\n  template: `\n    <div class=\"ribbon\" *ngIf=\"ribbonEnv\">\n      <a href=\"\">{{ 'global.ribbon.' + ribbonEnv | translate }}</a>\n    </div>\n  `\n})\nexport class CksPageRibbonComponent implements OnInit {\n  profileInfo: CksProfileInfo;\n  ribbonEnv: string;\n\n  constructor(private profileService: CksProfileService) {}\n\n  ngOnInit() {\n    this.profileService.getProfileInfo().then(profileInfo => {\n      this.profileInfo = profileInfo;\n      this.ribbonEnv = profileInfo.ribbonEnv;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class CksSidebarService {\n  sidebarViewed: BehaviorSubject<boolean>;\n\n  constructor() {\n    this.sidebarViewed = new BehaviorSubject<boolean>(true);\n  }\n\n  get isSidebarViewed() {\n    return this.sidebarViewed.asObservable();\n  }\n\n  setSidebarViewed(sidebarViewed: boolean) {\n    this.sidebarViewed.next(sidebarViewed);\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CksSidebarService } from '../../service/sidebar.service';\nimport { CksRouteService } from '../../service/route.service';\n\n@Component({\n  selector: 'cks-sidebar',\n  templateUrl: './sidebar.component.html'\n})\nexport class CksSidebarComponent {\n  @Input() headerTemplate: TemplateRef<any>;\n  @Input() contentTemplate: TemplateRef<any>;\n  @Input() footerTemplate: TemplateRef<any>;\n  @Input() menuItems: any[];\n  isSidebarViewed: Observable<boolean>;\n\n  constructor(private sidebarService: CksSidebarService, private routeService: CksRouteService) {\n    this.isSidebarViewed = this.sidebarService.isSidebarViewed;\n  }\n\n  doAction(navigation: any) {\n    if (navigation) {\n      if (typeof navigation === 'function') {\n        navigation();\n      } else {\n        this.routeService.navigate(navigation);\n      }\n    }\n  }\n}\n","import { Directive, OnInit, ElementRef, Renderer2, Input } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\n@Directive({\n  selector: '[cksActiveLanguage]'\n})\nexport class CksActiveLanguageDirective implements OnInit {\n  @Input() cksActiveLanguage: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2, private translateService: TranslateService) {}\n\n  ngOnInit() {\n    this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.updateActiveFlag(event.lang);\n    });\n    this.updateActiveFlag(this.translateService.currentLang);\n  }\n\n  updateActiveFlag(selectedLanguage) {\n    if (this.cksActiveLanguage === selectedLanguage) {\n      this.renderer.addClass(this.el.nativeElement, 'active');\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, 'active');\n    }\n  }\n}\n","import { CksNavbarComponent } from './component/navbar/navbar.component';\nimport { CksPageRibbonComponent } from './component/profiles/page-ribbon.component';\nimport { CksSidebarComponent } from './component/sidebar/sidebar.component';\nimport { CksActiveLanguageDirective } from './directive/active-language.directive';\n\nexport const CKS_COMPONENTS = [CksNavbarComponent, CksPageRibbonComponent, CksSidebarComponent];\n\nexport const CKS_DIRECTIVES = [CksActiveLanguageDirective];\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CksModuleConfig } from './config';\nimport { CksConfigService } from './config.service';\nimport { CKS_COMPONENTS, CKS_DIRECTIVES } from './cks-components';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, FontAwesomeModule, NgbModule, RouterModule, TranslateModule],\n  declarations: [...CKS_DIRECTIVES, ...CKS_COMPONENTS],\n  entryComponents: [],\n  exports: [...CKS_DIRECTIVES, ...CKS_COMPONENTS, TranslateModule]\n})\nexport class NgChakansModule {\n  static forRoot(moduleConfig: CksModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgChakansModule,\n      providers: [\n        { provide: CksModuleConfig, useValue: moduleConfig },\n        {\n          provide: CksConfigService,\n          useClass: CksConfigService,\n          deps: [CksModuleConfig]\n        }\n      ]\n    };\n  }\n  static forChild(moduleConfig: CksModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgChakansModule,\n      providers: [{ provide: CksModuleConfig, useValue: moduleConfig }]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/**\n * An utility class to manage RX subscriptions\n */\n@Injectable({ providedIn: 'root' })\nexport class CksSubscriptionManager {\n  private subscribersMap: Map<string, Subscription[]> = new Map<string, Subscription[]>();\n\n  /**\n   * Method to create {name}'s subscribers\n   */\n  create(name: string) {\n    this.subscribersMap.set(name, []);\n  }\n\n  /**\n   * Method to push subscriber in {name}'s subscribers\n   */\n  push(name: string, subscriber: Subscription) {\n    if (this.subscribersMap.get(name) === undefined) {\n      this.create(name);\n    }\n    this.subscribersMap.get(name).push(subscriber);\n  }\n\n  /**\n   * Method to destroy {name}'s subscribers\n   */\n  destroy(name: string) {\n    const subscribers = this.subscribersMap.get(name);\n    subscribers.filter(subscriber => subscriber !== undefined && !subscriber.closed).forEach(subscriber => subscriber.unsubscribe());\n    subscribers.splice(0, subscribers.length);\n    this.subscribersMap.delete(name);\n  }\n\n  /**\n   * Method to count {name}'s subscribers\n   */\n  getCount(name: string) {\n    return this.subscribersMap.get(name).length;\n  }\n\n  /**\n   * Method to destroy all subscribers\n   */\n  destroyAll() {\n    this.subscribersMap.forEach((subscribers, key) => {\n      subscribers.filter(subscriber => subscriber !== undefined && !subscriber.closed).forEach(subscriber => subscriber.unsubscribe());\n      subscribers.splice(0, subscribers.length);\n    });\n    this.subscribersMap.clear();\n  }\n}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}